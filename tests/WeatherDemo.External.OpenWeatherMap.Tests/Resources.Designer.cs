//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherDemo.External.OpenWeatherMap.Tests {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WeatherDemo.External.OpenWeatherMap.Tests.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;coord&quot;: {
        ///    &quot;lon&quot;: 37.6156,
        ///    &quot;lat&quot;: 55.7522
        ///  },
        ///  &quot;weather&quot;: [
        ///    {
        ///      &quot;id&quot;: 800,
        ///      &quot;main&quot;: &quot;Clear&quot;,
        ///      &quot;description&quot;: &quot;clear sky&quot;,
        ///      &quot;icon&quot;: &quot;01n&quot;
        ///    }
        ///  ],
        ///  &quot;base&quot;: &quot;stations&quot;,
        ///  &quot;main&quot;: {
        ///    &quot;temp&quot;: 270,
        ///    &quot;feels_like&quot;: 267.57,
        ///    &quot;temp_min&quot;: 267.9,
        ///    &quot;temp_max&quot;: 270.58,
        ///    &quot;pressure&quot;: 1016,
        ///    &quot;humidity&quot;: 79,
        ///    &quot;sea_level&quot;: 1016,
        ///    &quot;grnd_level&quot;: 997
        ///  },
        ///  &quot;visibility&quot;: 10000,
        ///  &quot;wind&quot;: {
        ///    &quot;speed&quot;: 1.64,
        ///    &quot;deg&quot;: 40,
        ///    &quot;gust&quot;: 4. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CurrentWeatherMos161122 {
            get {
                return ResourceManager.GetString("CurrentWeatherMos161122", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;cod&quot;: &quot;200&quot;,
        ///  &quot;message&quot;: 0,
        ///  &quot;cnt&quot;: 40,
        ///  &quot;list&quot;: [
        ///    {
        ///      &quot;dt&quot;: 1668621600,
        ///      &quot;main&quot;: {
        ///        &quot;temp&quot;: 269.96,
        ///        &quot;feels_like&quot;: 268,
        ///        &quot;temp_min&quot;: 269.94,
        ///        &quot;temp_max&quot;: 269.96,
        ///        &quot;pressure&quot;: 1016,
        ///        &quot;sea_level&quot;: 1016,
        ///        &quot;grnd_level&quot;: 996,
        ///        &quot;humidity&quot;: 80,
        ///        &quot;temp_kf&quot;: 0.02
        ///      },
        ///      &quot;weather&quot;: [
        ///        {
        ///          &quot;id&quot;: 800,
        ///          &quot;main&quot;: &quot;Clear&quot;,
        ///          &quot;description&quot;: &quot;clear sky&quot;,
        ///          &quot;icon&quot;: &quot;01n&quot;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Forecast5DaysMos161122 {
            get {
                return ResourceManager.GetString("Forecast5DaysMos161122", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;name&quot;: &quot;Moscow&quot;,
        ///    &quot;local_names&quot;: {
        ///      &quot;bs&quot;: &quot;Moskva&quot;,
        ///      &quot;os&quot;: &quot;Мæскуы&quot;,
        ///      &quot;ka&quot;: &quot;მოსკოვი&quot;,
        ///      &quot;sw&quot;: &quot;Moscow&quot;,
        ///      &quot;ht&quot;: &quot;Moskou&quot;,
        ///      &quot;hy&quot;: &quot;Մոսկվա&quot;,
        ///      &quot;nn&quot;: &quot;Moskva&quot;,
        ///      &quot;se&quot;: &quot;Moskva&quot;,
        ///      &quot;gl&quot;: &quot;Moscova - Москва&quot;,
        ///      &quot;bi&quot;: &quot;Moskow&quot;,
        ///      &quot;ku&quot;: &quot;Moskow&quot;,
        ///      &quot;tg&quot;: &quot;Маскав&quot;,
        ///      &quot;fr&quot;: &quot;Moscou&quot;,
        ///      &quot;ay&quot;: &quot;Mosku&quot;,
        ///      &quot;pl&quot;: &quot;Moskwa&quot;,
        ///      &quot;am&quot;: &quot;ሞስኮ&quot;,
        ///      &quot;ky&quot;: &quot;Москва&quot;,
        ///      &quot;st&quot;: &quot;Moscow&quot;,
        ///      &quot;bo&quot;: &quot;མོ་སི་ཁོ།&quot;,
        ///      &quot;io&quot;:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GeoDirectMoscow {
            get {
                return ResourceManager.GetString("GeoDirectMoscow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///      &quot;bs&quot;: &quot;Moskva&quot;,
        ///      &quot;os&quot;: &quot;Мæскуы&quot;,
        ///      &quot;ka&quot;: &quot;მოსკოვი&quot;,
        ///      &quot;sw&quot;: &quot;Moscow&quot;,
        ///      &quot;ht&quot;: &quot;Moskou&quot;,
        ///      &quot;hy&quot;: &quot;Մոսկվա&quot;,
        ///      &quot;nn&quot;: &quot;Moskva&quot;,
        ///      &quot;se&quot;: &quot;Moskva&quot;,
        ///      &quot;gl&quot;: &quot;Moscova - Москва&quot;,
        ///      &quot;bi&quot;: &quot;Moskow&quot;,
        ///      &quot;ku&quot;: &quot;Moskow&quot;,
        ///      &quot;tg&quot;: &quot;Маскав&quot;,
        ///      &quot;fr&quot;: &quot;Moscou&quot;,
        ///      &quot;ay&quot;: &quot;Mosku&quot;,
        ///      &quot;pl&quot;: &quot;Moskwa&quot;,
        ///      &quot;am&quot;: &quot;ሞስኮ&quot;,
        ///      &quot;ky&quot;: &quot;Москва&quot;,
        ///      &quot;st&quot;: &quot;Moscow&quot;,
        ///      &quot;bo&quot;: &quot;མོ་སི་ཁོ།&quot;,
        ///      &quot;io&quot;: &quot;Moskva&quot;,
        ///      &quot;jv&quot;: &quot;Moskwa&quot;,
        ///      &quot;kn&quot;: &quot;ಮಾಸ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MosLocalNames {
            get {
                return ResourceManager.GetString("MosLocalNames", resourceCulture);
            }
        }
    }
}
